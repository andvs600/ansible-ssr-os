---
- name: Check services exists
  block:
    - name: Check service facts
      service_facts:

    - debug:
        msg: "Possibly the node uses Docker. The node must be configured manually!"
      when: ansible_facts.services['docker.service'] is defined and ansible_facts.services['docker.service'].status == 'disabled'

    - name: LXC host
      set_fact:
        lxc_host: true
      when: lxc_host is undefined and (ansible_facts.services['docker.service'] is defined and ansible_facts.services['docker.service'].status == 'enabled')

- name: Skip play on host if worked firewalld by default
  block:
    - name: Firewalld status
      debug:
        msg: "STATUS: {{ ansible_facts.services['firewalld.service'].status }}"
      when: ansible_facts.services['firewalld.service'] is defined

    - name: IPtables status
      debug:
        msg: "STATUS: {{ ansible_facts.services['iptables.service'].status }}"
      when: ansible_facts.services['iptables.service'] is defined

    - name: NFtables status
      debug:
        msg: "STATUS: {{ ansible_facts.services['nftables.service'].status }}"
      when: ansible_facts.services['nftables.service'] is defined

    - name:
      assert:
        that:
          - "'{{ ansible_facts.services['firewalld.service'].state }}' == 'running'"
        fail_msg: "Firewalld is not running"
        success_msg: "Firewalld is running"
  always:
    - meta: end_host
  when: ((firewalld_not_disabled | bool == true) and (firewalld_not_disabled is defined))


- name: Include task config iptables
  include: iptables.yml
  when: (ansible_os_family == 'RedHat' and ansible_distribution_major_version == '7')

- name: Include task config nftables
  include: nftables.yml
  when: (ansible_os_family == 'RedHat' and ansible_distribution_major_version >= '8')
...