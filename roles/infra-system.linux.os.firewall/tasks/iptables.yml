---
- name: Install iptables service
  yum:
    name: "{{ item }}"
    state: latest
  loop:
    - iptables
    - iptables-services
  when: ansible_facts.services['iptables.service'] is undefined

- name: Disable firewalld and enable IPtables
  block:
    - name: Stop and mask firewalld service
      systemd:
        name: firewalld
        state: stopped
        enabled: no
        masked: yes

    - name: Enable service iptables and ensure it is not masked
      systemd:
        name: iptables
        state: started
        enabled: yes
        masked: no
      register: result_activate_iptables
  when: (activate_firewall | bool == true) and (activate_firewall is defined)

- name: Disable prevent Docker from manipulating iptables
  block:
    - name: Copy the Docker engineâ€™s configuration file
      copy:
        src: files/daemon.json
        dest: /etc/docker/daemon.json
        owner: root
        group: root
        mode: 0600
      register: copy_config

    - name: Restart Docker service
      systemd:
        name: docker
        state: restarted
      when: copy_config is succeeded and ((restart_docker_srv | bool == true) and (restart_docker_srv is defined))
  when: ansible_facts.services['docker.service'] is defined and ansible_facts.services['docker.service'].status == 'enabled'

- name: Change the xt_recent module 
  modprobe:
    name: xt_recent
    state: present
    params: 'ip_pkt_list_tot=75'

- name: Copy the xt_recent module config
  copy:
    src: files/ip_pkt_list_tot.conf
    dest: /etc/modprobe.d/ip_pkt_list_tot.conf
    owner: root
    group: root
    mode: 0644

- name: Copy the base rules file
  template:
    src: iptcfg.j2
    dest: /usr/sbin/iptcfg
    owner: root
    group: root
    mode: '0750'

- name: Copy the custom rules template file
  template:
    src: custom_rules.j2
    dest: /etc/sysconfig/custom
    owner: root
    group: root
    mode: '0644'
  register: result_change_rules
...